
extend class MinimalStatusBar {
	
	override void DrawAutomapHUD (double ticFrac) {
		// This uses the normal automap HUD but just changes the highlight color.
		DoDrawAutomapHUD(Font.CR_GREY, Font.CR_UNTRANSLATED);
	}
	
	override void Draw (int state, double TicFrac) {
		
		// player data
		PlayerInfo cp = CPlayer;
		let pmo = cp.mo;
		
		// create the list of owned ammo
		// this only contains ammo that the player has weapons for
		ownedAmmo.Clear();
		// credit to argv on zdf for the following if() {} block - my implementation for this was slow
		// as all fuck, and upon it being brought up, jesus was my original code bad D:
		// this should be far faster
		if (cp) {
			
			for (let inv = pmo.Inv; inv; inv = inv.Inv) {
				// [argv] look through the player pawn's inventory for weapons
				if (inv is "Weapon") {
					// [argv] take each ammo item, and add it to ownedAmmo if not already present
					let ammo = Weapon(inv).Ammo1;
					if (ammo && ownedAmmo.Size() == ownedAmmo.Find(ammo))
						ownedAmmo.Push(ammo);
					
					ammo = Weapon(inv).Ammo2;
					if (ammo && ownedAmmo.Size() == ownedAmmo.Find(ammo))
						ownedAmmo.Push(ammo);
				}
			}
		}
		
		Super.Draw(state, TicFrac);
		
		if (state == HUD_StatusBar) {
			
			BeginStatusBar();
			DrawMainBar(TicFrac);
		}
		else if (state == HUD_Fullscreen) {
			
			BeginHUD();
			
			if (cp && !automapactive) {
				
				switch (pmo.CountInv("playerConversation")) {
					case 1:
						DrawFullScreenConversation(TicFrac);
						break;
					case 2:
						//DrawFullScreenConversationInEva(TicFrac, cp);
					case 0:
						switch (pmo.CountInv("playerStatus")) {
							case 1:
							case 2:
							case 3:
								DrawFullScreenEvangelion(TicFrac, cp);
								break;
							case 4:
							case 5:
							case 6:
								DrawFullScreenPilot(TicFrac);
								break;						
							default:
								// no hud
						}
				}
			}
		}
	}
	
	void DrawMainBar (double TicFrac) {}
}

